name: Publish draft release when release branch is merged

on:
  pull_request:
    types:
      - closed
    branches:
      - master
      - support/*

# env:
#   GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  publish_release:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      # - name: GH_TOKEN
      #   if: env.GH_TOKEN == ''
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      # - name: Set to SSH mode
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: git config --global url.ssh://git@github.com/.insteadOf https://github.com/

      - name: Get release id
        id: get_release_id
        run: |
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          RELEASEID=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: token $TOKEN" https://api.github.com/repos/tiller1010/silverstripe-module-search/releases)
          RELEASEID=$(echo "$RELEASEID" | grep \"id\"  | head -n 1 | sed -re "s/[a-z]*//g;s/[-|,|:|'\"]//g;s/\s//g")
          echo "::set-output name=release_id::$RELEASEID"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.get_release_id.outputs.release_id }}

      - name: Payload info
        id: payload_info
        uses: Dovyski/payload-info-action@master
        continue-on-error: true

      # Generate changelog, changelog.yml is not triggered by other actions
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.payload_info.outputs.pull_request.base.ref }}
          # ref: changelog/${{ steps.get_release_id.outputs.release_id }}
          fetch-depth: 0
          # token: ${{ env.GH_TOKEN }}

      # Check if this is a support branch
      - name: Check For support branch
        id: is_support_branch
        continue-on-error: true
        run: |
          FILTEREDBRANCHNAME=$(git branch | grep "\* support")
          echo "::set-output name=filtered_branch_name::$FILTEREDBRANCHNAME"

      # - name: Create changelog branch
      #   uses: peterjgrainger/action-create-branch@v2.2.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     branch: changelog/${{ steps.get_release_id.outputs.release_id }}

      # - name: Checkout changelog branch
      #   uses: actions/checkout@v2
      #   with:
      #     ref: changelog/${{ steps.get_release_id.outputs.release_id }}

      - name: Generate Changelog
        id: changelog
        if: steps.is_support_branch.outputs.filtered_branch_name == ''
        uses: loopwerk/tag-changelog@v1.0.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,doc,chore
          config_file: .github/tag-changelog-config.js

      - name: Output Changelog
        id: output_changelog
        if: steps.is_support_branch.outputs.filtered_branch_name == ''
        run: TAGCONTENT="${{ steps.changelog.outputs.changelog }}";CHANGELOG=$(cat CHANGELOG.md);CHANGELOG=$(echo "$CHANGELOG" | sed -e "s/# Changelog//");echo -e "# Changelog\n\n$TAGCONTENT$CHANGELOG" > CHANGELOG.md

      # - name: Commit Updated Changelog
      #   if: steps.is_support_branch.outputs.filtered_branch_name == ''
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_message: Updated CHANGELOG.md
          # branch: changelog/${{ steps.get_release_id.outputs.release_id }}

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v4
        with:
          base: master
          commit-message: Updated CHANGELOG.md
          # branch: changelog/${{ steps.get_release_id.outputs.release_id }}

      - name: Approve PR
        uses: hmarr/auto-approve-action@v2
        with:
          review-message: "Auto approved automated PR"
          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
          github-token: ${{ secrets.SOME_USERS_PAT }}

      - name: Auto merge
        uses: pascalgn/automerge-action@v0.15.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST: ${{ steps.create_pr.outputs.pull-request-number }}
          MERGE_DELETE_BRANCH: true

      # Remove the release or hotfix branch after publishing
      - name: Remove PR branch
        uses: dawidd6/action-delete-branch@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branches: ${{ steps.payload_info.outputs.branch }}
